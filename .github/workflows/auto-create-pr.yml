name: Criar Pull Request Autom√°tico

on:
  push:
    branches-ignore:
      - 'main'
      - 'develop'

jobs:
  create_pull_request:
    permissions:
      contents: write
      pull-requests: write

    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop'

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Configurar Git
        run: |
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@users.noreply.github.com'
          git fetch origin main:main
          git fetch --all

      - name: Obter nome da branch
        id: get_branch
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Coletar commits
        id: get_commits
        run: |
          git fetch origin main:main
          commits=$(git log origin/main..${{ steps.get_branch.outputs.BRANCH_NAME }} --no-merges --pretty="format:%s" --reverse)
          if [ -n "$commits" ]; then
            echo "COMMITS<<EOF" >> $GITHUB_OUTPUT
            echo "$commits" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "COMMITS=" >> $GITHUB_OUTPUT
          fi

      - name: Gerar corpo do PR
        id: generate_pr_body
        shell: bash
        run: |
          IFS=$'\n'
          commit_lines_formatted=""
          raw_commits="${{ steps.get_commits.outputs.COMMITS }}"

          if [ -z "$raw_commits" ]; then
            commit_lines_formatted="Nenhum commit novo para listar nesta branch em rela√ß√£o √† 'main'."
          else
            for commit_msg in $raw_commits; do
              if [[ "$commit_msg" == *":"* ]]; then
                commit_type=$(echo "$commit_msg" | cut -d':' -f1 | xargs)
                commit_desc=$(echo "$commit_msg" | cut -d':' -f2- | sed 's/^[[:space:]]*//')
              else
                commit_type="misc"
                commit_desc="$commit_msg"
              fi

              emoji=""
              case "$commit_type" in
                feat)     emoji="‚ú®";;
                fix)      emoji="üêõ";;
                docs)     emoji="üìù";;
                style)    emoji="üíÖ";;
                refactor) emoji="‚ôªÔ∏è";;
                test)     emoji="‚úÖ";;
                perf)     emoji="üöÄ";;
                chore)    emoji="üîß";;
                ci)       emoji="‚öôÔ∏è";;
                *)        emoji="üìÑ";;
              esac
              commit_lines_formatted="${commit_lines_formatted}${emoji} **${commit_type}:** ${commit_desc}"$'\n'
            done
          fi

          pr_body_content="### Descri√ß√£o"$'\n\n'"${commit_lines_formatted}"

          echo "PR_BODY<<EOF" >> $GITHUB_OUTPUT
          echo "$pr_body_content" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Instalar GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - name: Criar Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Branch atual: ${{ steps.get_branch.outputs.BRANCH_NAME }}"
          echo "Criando PR com t√≠tulo 'PR Autom√°tico: ${{ steps.get_branch.outputs.BRANCH_NAME }} para main'"
          gh pr create \
            --title "PR Autom√°tico: ${{ steps.get_branch.outputs.BRANCH_NAME }} para main" \
            --body "${{ steps.generate_pr_body.outputs.PR_BODY }}" \
            --base main \
            --head ${{ steps.get_branch.outputs.BRANCH_NAME }} \
            --label "automacao" \
            --label "nova-release"